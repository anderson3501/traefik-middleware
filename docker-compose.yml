services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
    ports:
      - "80:80"
    networks:
      - firstnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`ops.localhost`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth,strip-dashboard"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=admin:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
      - "traefik.http.middlewares.strip-dashboard.stripprefix.prefixes=/dashboard"


  neo4j:
    image: neo4j:5.22.0-community
    container_name: neo4j_db
    restart: always
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
    volumes:
      - neo4j_data:/data
    networks:
      - firstnet

  backend_flask:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flask_backend
    restart: always
    depends_on:
      - neo4j
    env_file:
      - .env
    networks:
      - firstnet
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.services.api.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/v1"

volumes:
  neo4j_data:
    driver: local

networks:
  firstnet:
    driver: bridge
